{"version":3,"sources":["webpack://tajHtmlCompiler/./build/parser.js","webpack://tajHtmlCompiler/./src/add_ctx_to_expression.ts","webpack://tajHtmlCompiler/./src/constant.ts","webpack://tajHtmlCompiler/./src/convert_array_to_comma_seperated_string.ts","webpack://tajHtmlCompiler/./src/create_renderer.ts","webpack://tajHtmlCompiler/./src/enums/error_type.ts","webpack://tajHtmlCompiler/./src/enums/html_tag.ts","webpack://tajHtmlCompiler/./src/enums/index.ts","webpack://tajHtmlCompiler/./src/enums/life_cycle_event.ts","webpack://tajHtmlCompiler/./src/index.ts","webpack://tajHtmlCompiler/./src/parse_view.ts","webpack://tajHtmlCompiler/./src/remove_comma_from_last.ts","webpack://tajHtmlCompiler/./src/unique.ts","webpack://tajHtmlCompiler/./src/utils/for_own.ts","webpack://tajHtmlCompiler/./src/utils/get_from_window.ts","webpack://tajHtmlCompiler/./src/utils/get_object_length.ts","webpack://tajHtmlCompiler/./src/utils/index.ts","webpack://tajHtmlCompiler/./src/utils/index_of.ts","webpack://tajHtmlCompiler/./src/utils/is_array.ts","webpack://tajHtmlCompiler/./src/utils/is_array_index.ts","webpack://tajHtmlCompiler/./src/utils/is_key_exist.ts","webpack://tajHtmlCompiler/./src/utils/is_null.ts","webpack://tajHtmlCompiler/./src/utils/is_object.ts","webpack://tajHtmlCompiler/./src/utils/is_primitive.ts","webpack://tajHtmlCompiler/./src/utils/is_string.ts","webpack://tajHtmlCompiler/./src/utils/is_true.ts","webpack://tajHtmlCompiler/./src/utils/log_helper.ts","webpack://tajHtmlCompiler/./src/utils/merge.ts","webpack://tajHtmlCompiler/./src/utils/set_attribute.ts","webpack://tajHtmlCompiler/external \"js-beautify\"","webpack://tajHtmlCompiler/webpack/bootstrap","webpack://tajHtmlCompiler/webpack/runtime/compat get default export","webpack://tajHtmlCompiler/webpack/runtime/define property getters","webpack://tajHtmlCompiler/webpack/runtime/hasOwnProperty shorthand","webpack://tajHtmlCompiler/webpack/runtime/make namespace object","webpack://tajHtmlCompiler/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,sDAAsD,yBAAyB,EAAE;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,sDAAsD,yBAAyB,EAAE;AACjF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,qBAAqB;AACpC;AACA;;AAEA;;AAEA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qBAAqB;;AAErB,gCAAgC,4BAA4B;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,OAAO;AACP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,OAAO;AACP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,mBAAmB;AACnB,0CAA0C;AAC1C,mBAAmB;AACnB,0CAA0C;AAC1C;AACA,eAAe;AACf,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,kBAAkB,QAAQ;AAC1B,OAAO;AACP;AACA;AACA,OAAO;AACP,kBAAkB;AAClB,yCAAyC;AACzC,kBAAkB;AAClB,yCAAyC;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,UAAU;AACV;AACA,6BAA6B;AAC7B;AACA,yEAAyE;AACzE;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe;AACf,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,4FAA4F,KAAK;AACjG;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,wCAAwC;AACxC,0HAA0H;;AAE1H;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC50EwE;AAWxE,SAAS,kBAAkB,CAAC,KAAa;IACrC,OAAO,KAAK,CAAC,OAAO,CAAC,qDAAc,EAAK,oDAAa,QAAK,CAAC;AAC/D,CAAC;AAEM,SAAS,kBAAkB,CAAC,WAA0B;IACzD,IAAM,IAAI,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,SAAS,iBAAiB,CAAC,KAAa;QACpC,IAAI,uDAAgB,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;YAClC,GAAG,IAAI,KAAK,CAAC;SAChB;aACI;YACD,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SAC3B;IACL,CAAC;IACD,IAAI,WAAW,IAAI,IAAI,EAAE;QAErB,WAAW,CAAC,OAAO,CAAC,oBAAU;YAC1B,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACvC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,EAAE;gBAC3B,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzB,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBACzB,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,EAAE;oBAC9B,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACxC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;iBAC/B;aACJ;YACD,IAAI,UAAU,CAAC,EAAE,EAAE;gBACf,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC;gBACrB,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC;aACxB;QACL,CAAC,CAAC;KACL;SACI;QACD,GAAG,GAAG,IAAI,CAAC;KACd;IAED,OAAO;QACH,MAAM,EAAE,GAAG;QACX,IAAI;QACJ,6EAA6E;QAC7E,GAAG,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;KAC/B;AACL,CAAC;;;;;;;;;;;;;;;;;AC1DD,mDAAmD;AAC5C,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;AACtD,sEAAsE;AAC/D,IAAM,cAAc,GAAG,mCAAmC,CAAC;AAC3D,IAAM,aAAa,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;;;ACJ4B;AACtB;AAElC,SAAS,oBAAoB,CAAC,KAAe,EAAE,oBAA2B;IAA3B,kEAA2B;IAC7E,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,KAAK,CAAC,OAAO,CAAC,aAAG;QACb,MAAM,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,CAAC,CAAC,CACvC,uDAAgB,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAI,GAAG,MAAG,CAAC,CAAC,CAAC;YACpD,GAAG,CAAC,GAAG,GAAG;IAClB,CAAC,CAAC;IACF,MAAM,GAAG,4EAAmB,CAAC,MAAM,CAAC,CAAC;IACrC,MAAM,IAAI,GAAG;IACb,OAAO,MAAM,CAAC;AAClB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbwC;AACL;AACC;AACM;AAET;AAC2B;AACE;AACkB;AACjF,IAAI,QAAQ,GAAG,mBAAO,CAAC,gCAAa,CAAC,CAAC;AAE/B,SAAS,cAAc,CAAC,QAAgB;IAC3C,IAAM,cAAc,GAAG,sDAAS,CAAC,QAAQ,CAAC,CAAC;IAC3C,2CAA2C;IAC3C,IAAI,cAAc,CAAC,IAAI,EAAE;QACrB,IAAI,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE;YAC5B,OAAO,CAAC,KAAK,CAAC,sBAAoB,QAAU,CAAC,CAAC;YAC9C,MAAM,IAAI,6CAAS,CAAC,2DAAuB,CAAC,CAAC,GAAG,EAAE,CAAC;SACtD;KACJ;IACD,IAAI,SAAS,GAAG,WAAS,oDAAa,YAAS,CAAC;IAChD,IAAM,sBAAsB,GAAG,UAAC,QAAuB;QACnD,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,QAAQ,CAAC,IAAI,EAAE;YACf,IAAM,WAAS,GAAG;gBACd,IAAI,OAAO,GAAG,SAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAI;gBAC1C,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAChB,IAAI,sBAAoC,CAAC;oBACzC,IAAI,eAAa,CAAC;oBAClB,IAAM,eAAa,GAAG,EAAE,CAAC;oBACzB,IAAI,kBAAgB,GAAG,KAAK,CAAC;oBAC7B,IAAM,aAAW,GAAG,UAAC,IAAY;wBAC7B,IAAI,eAAa,IAAI,IAAI,EAAE;4BACvB,OAAO;yBACV;wBACD,kBAAgB,GAAG,IAAI,CAAC;wBACxB,QAAQ,CAAC,KAAK,CAAC,eAAa,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,sBAAoB,CAAC;wBACxE,sBAAoB,GAAG,IAAI,CAAC;wBAC5B,iFAAiF;wBACjF,KAAK,IAAI,CAAC,GAAG,eAAa,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;4BAC3C,eAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBACzB;wBACD,eAAa,GAAG,IAAI,CAAC;oBACzB,CAAC;oBACD,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;wBAChC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;4BACnC,OAAO,aAAW,CAAC,KAAK,CAAC,CAAC;yBAC7B;wBACD,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;wBAC/B,IAAI,KAAK,CAAC,MAAM,EAAE;4BACd,sBAAoB,GAAG;gCACnB,KAAK,EAAE,KAAK,CAAC,MAAM;gCACnB,UAAU,EAAE,EAAE;6BACC,CAAC;4BACpB,eAAa,GAAG,KAAK,CAAC;yBACzB;6BACI,IAAI,KAAK,CAAC,UAAU,EAAE;4BACvB,sBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC/C;6BACI,IAAI,KAAK,CAAC,IAAI,EAAE;4BACjB,sBAAoB,CAAC,IAAI,GAAG,KAAK,CAAC;4BAClC,aAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;yBAC1B;6BACI;4BACD,aAAW,CAAC,KAAK,CAAC,CAAC;yBACtB;oBACL,CAAC,CAAC,CAAC;oBAEH,4CAA4C;oBAC5C,IAAI,sBAAoB,IAAI,kBAAgB,KAAK,KAAK,EAAE;wBACpD,aAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;qBACtC;oBACD,+CAA+C;oBAC/C,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK;wBAChD,OAAO,eAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC3C,CAAC,CAAC;oBAEF,IAAI,KAAK,GAAG,GAAG;oBACf,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;wBAC/B,IAAM,aAAa,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;wBACnD,IAAI,aAAa,IAAI,aAAa,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;4BAClD,KAAK,IAAO,aAAa,MAAG,CAAC;yBAChC;oBACL,CAAC,CAAC,CAAC;oBACH,KAAK,GAAG,4EAAmB,CAAC,KAAK,CAAC,GAAG,GAAG;oBACxC,OAAO,IAAI,KAAK,CAAC;iBACpB;qBACI;oBACD,OAAO,IAAI,IAAI,CAAC;iBACnB;gBACD,OAAO,OAAO,CAAC;YACnB,CAAC;YAED,IAAM,cAAY,GAAG;gBACjB,IAAI,SAAS,GAAG,IAAI,CAAC;gBAErB,eAAe;gBACf,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAChD,IAAI,WAAW,GAAG,CAAC,EAAE;oBACjB,IAAI,UAAQ,GAAG,EAAE,CAAC;oBAClB,yCAAyC;oBACzC,sDAAsD;oBACtD,IAAM,iBAAe,GAAG,oCAAoC;oBAC5D,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,KAAK;wBACnC,IAAI,UAAU,GAAG,GAAG,CAAC;wBACrB,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAI;4BACpB,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAe,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC;wBAChE,CAAC,CAAC,CAAC;wBACH,UAAU,GAAG,4EAAmB,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBACnD,UAAQ,IAAO,EAAE,CAAC,IAAI,mDACN,UAAU,iDACV,EAAE,CAAC,QAAQ,+CACb,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,kDACtB,8FAAoB,CAAC,EAAE,CAAC,SAAS,CAAC,gCACjD;wBAEF,IAAI,KAAK,GAAG,CAAC,GAAG,WAAW,EAAE;4BACzB,UAAQ,IAAI,GAAG;yBAClB;oBACL,CAAC,CAAC,CAAC;oBACH,SAAS,IAAI,SAAO,UAAQ,MAAG,CAAC;iBACnC;gBAED,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;oBACnB,SAAS,IAAI,CAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,YAAQ,CAAC;4CAC7C,OAAO;wBACd,+BAA+B;wBAC/B,IAAM,UAAU,GAAG;4BACf,KAAK,EAAE,EAAE;4BACT,KAAK,EAAE,EAAE;4BACT,MAAM,EAAE,EAAE;yBACb;wBACD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,kBAAQ;4BACvC,IAAM,oBAAoB,GAAG,0EAAkB,CAAC,QAAQ,CAAC,CAAC;4BAC1D,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;4BAClD,UAAU,CAAC,KAAK,kBAAO,UAAU,CAAC,KAAK,EAAK,oBAAoB,CAAC,IAAI,CAAC;4BACtE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;wBACpD,CAAC,CAAC;wBAEF,SAAS,IAAO,OAAO,gEACK,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,8FAAoB,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,oDAC1G,8FAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,mDACpC,8FAAoB,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,qEAE1D,CAAC;;oBAnBV,KAAK,IAAM,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG;gCAA5B,OAAO;qBAqBjB;oBACD,SAAS,GAAG,4EAAmB,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;oBACjD,mBAAmB;iBACtB;gBAED,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE;oBACpB,SAAS,IAAI,CAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,mBAAa,QAAQ,CAAC,IAAI,CAAC,IAAM,CAAC;iBACpF;gBAED,oBAAoB;gBACpB,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBAChC,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC/B,IAAI,UAAU,GAAG,CAAC,EAAE;oBAChB,IAAI,YAAU,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;wBACrB,IAAI,IAAI,CAAC,MAAM,EAAE;4BACb,YAAU,IAAO,IAAI,CAAC,GAAG,gBAAW,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,KAAK,OAAI,CAAC;yBACvE;6BACI;4BACD,YAAU,IAAO,IAAI,CAAC,GAAG,aAAQ,IAAI,CAAC,KAAK,OAAI,CAAC;yBACnD;wBACD,IAAI,KAAK,GAAG,CAAC,GAAG,UAAU,EAAE;4BACxB,YAAU,IAAI,GAAG;yBACpB;oBACL,CAAC,CAAC,CAAC;oBAEH,SAAS,IAAI,CAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,gBAAU,YAAU,MAAG,CAAC;iBAC1E;gBAED,SAAS,IAAI,IAAI,CAAC;gBAClB,OAAO,SAAS,CAAC;YACrB,CAAC;YAED,IAAM,SAAS,GAAG,UAAC,KAAa;gBAC5B,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC1B,QAAI,GAAK,0EAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,KAArC,CAAsC;gBAClD,IAAM,QAAQ,GAAG,UAAC,MAAM;oBACpB,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBACnC,CAAC;gBACD,OAAO,eAAa,IAAI,CAAC,CAAC,CAAC,WAAM,MAAM,CAAC,GAAG,SAAI,MAAM,CAAC,KAAK,iDAEvD,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAO,MAAM,CAAC,GAAK,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC;oBACpD,OAAO,CAAC,QAAQ,CAAC,SAAO,MAAM,CAAC,KAAO,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,oCAElD,+CAAM,EAAE,wBACnB;gBACD,gBAAgB;YACpB,CAAC;YACD,IAAM,YAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;YAC/C,IAAI,YAAU,IAAI,YAAU,CAAC,KAAK,EAAE;gBAChC,IAAI,SAAO,GAAG,EAAE,CAAC;gBACjB,CAAC;oBACS,SAAmB,0EAAkB,CAAC,YAAU,CAAC,KAAK,CAAC,EAArD,MAAM,cAAE,IAAI,UAAyC,CAAC;oBAC9D,SAAO,GAAG,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC/B,GAAG,IAAI,oBAAkB,MAAM,YAAM,WAAS,EAAE,GAAG,cAAY,EAAE,CAAE;gBACvE,CAAC,CAAC,EAAE,CAAC;gBACL,YAAU,CAAC,UAAU,CAAC,OAAO,CAAC,cAAI;oBACxB,SAAmB,0EAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAA/D,MAAM,cAAE,IAAI,UAAmD,CAAC;oBACxE,SAAO,GAAG,SAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC/B,GAAG,IAAI,MAAI,MAAM,WAAM,sBAAsB,CAAC,IAAI,CAAC,MAAG;gBAC1D,CAAC,CAAC,CAAC;gBAEH,IAAI,YAAY,GAAG,8FAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,SAAO,CAAC,CAAC,CAAC,CAAC;gBACtE,IAAI,UAAU,UAAC;gBACf,IAAI,YAAU,CAAC,IAAI,EAAE;oBACjB,UAAU,GAAG,sBAAsB,CAAC,YAAU,CAAC,IAAI,CAAC,CAAC;iBACxD;qBACI;oBACD,UAAU,GAAG,MAAM,CAAC;iBACvB;gBACD,GAAG,IAAI,MAAI,UAAU,WAAM,YAAY,SAAI,+CAAM,EAAE,MAAG;aACzD;iBACI;gBACD,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE;oBACtB,GAAG,IAAI,SAAS,CAAC,WAAS,EAAE,GAAG,cAAY,EAAE,CAAC;iBACjD;qBACI;oBACD,GAAG,IAAI,WAAS,EAAE,GAAG,cAAY,EAAE;iBACtC;aACJ;SACJ;aACI,IAAI,QAAQ,CAAC,WAAW,EAAE;YAE3B,IAAI,QAAM,GAAG,iBAAiB,CAAC;YAC/B,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,cAAI;gBACzB,QAAM,IAAI,QAAM,IAAI,OAAI;gBACxB,UAAQ,IAAI,GAAG;YACnB,CAAC,CAAC,CAAC;YACG,SAAmB,0EAAkB,CAAC,CAAC;oBACzC,EAAE,EAAE,IAAI;oBACR,GAAG,EAAE;wBACD,IAAI,EAAE,QAAQ,CAAC,WAAW;wBAC1B,EAAE,EAAE,IAAI;wBACR,KAAK,EAAE,IAAI;qBACd;iBACJ,CAAC,CAAC,EAPK,IAAI,YAAE,MAAM,YAOjB,CAAC;YACJ,QAAM,IAAO,MAAM,SAAI,UAAQ,QAAK,CAAC;YACrC,GAAG,IAAI,QAAM,QAAM,UAAK,8FAAoB,CAAC,IAAI,CAAC,SAAI,+CAAM,EAAE,MAAG;SACpE;aACI,IAAK,QAAgB,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,GAAG,IAAI,SAAO,QAAQ,OAAI,CAAC;SAC9B;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IACD,SAAS,IAAI,YAAU,sBAAsB,CAAC,cAAc,CAAG,CAAC;IAChE,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;IAC/E,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpC,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AACnE,CAAC;;;;;;;;;;;;;;;AC/PD,IAAY,UAOX;AAPD,WAAY,UAAU;IAClB,oDAAsC;IACtC,0CAA4B;IAC5B,8CAAgC;IAChC,4DAA8C;IAC9C,2DAA6C;IAC7C,8CAAgC;AACpC,CAAC,EAPW,UAAU,KAAV,UAAU,QAOrB;;;;;;;;;;;;;;;ACPD,IAAY,QAeX;AAfD,WAAY,QAAQ;IAChB,qCAAO;IACP,iCAAK;IACL,iCAAK;IACL,uCAAQ;IACR,yCAAS;IACT,iCAAK;IACL,2CAAU;IACV,yCAAS;IACT,mCAAM;IACN,mCAAM;IACN,yCAAS;IACT,yCAAS;IACT,yCAAS;IACT,2CAAU;AACd,CAAC,EAfW,QAAQ,KAAR,QAAQ,QAenB;;;;;;;;;;;;;;;;;;;;ACf4B;AACF;AACQ;;;;;;;;;;;;;;;ACFnC,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,wCAAqB;IACrB,sCAAmB;IACnB,0CAAuB;AAC3B,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;;;;;;;;;;;;;;;;ACJiC;;;;;;;;;;;;;;;;;;;ACAQ;AACL;AACD;AAG7B,SAAS,SAAS,CAAC,QAAgB;IACtC,IAAI;QACA,iEAAiE;QACjE,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC3B,OAAO,gDAAY,CAAC,QAAQ,CAAkB,CAAC;KAClD;IACD,OAAO,EAAE,EAAE;QACP,IAAM,UAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;QAC7B,IAAM,GAAG,GAAG,kCAAkC,CAAC;QAC/C,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACnC,0LAA0L;QAC1L,qCAAqC;QACrC,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACjE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,UAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,UAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACzE,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,UAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAC9C,GAAG,EAAE,GAAG,GAAG,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACxC,IAAM,GAAG,GAAG,IAAI,6CAAS,CAAC,0DAAsB,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzE,MAAM,GAAG,CAAC;KACb;AACL,CAAC;;;;;;;;;;;;;;;ACzBM,SAAS,mBAAmB,CAAC,KAAa;IAC7C,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;IACrB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC7C;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;;;;;;;;;;;;;;;ACND,IAAI,WAAW,GAAG,CAAC,CAAC;AAEb,IAAM,MAAM,GAAG;IAClB,OAAO,EAAE,WAAW,CAAC;AACzB,CAAC;;;;;;;;;;;;;;;ACJM,SAAS,MAAM,CAAC,GAAW,EAAE,EAAwB;IACxD,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;QACnB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;YACzB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;KACJ;AACL,CAAC;AAAA,CAAC;;;;;;;;;;;;;;;ACNK,IAAM,aAAa,GAAG,UAAC,IAAY;IACtC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,eAAe,CAAC,KAAK;IACjC,OAAO,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;AACrD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF8B;AACL;AACG;AACF;AACM;AACL;AACA;AACK;AACG;AACT;AACH;AACQ;AACN;AACA;AACK;;;;;;;;;;;;;;;ACdxB,SAAS,OAAO,CAAC,KAAK,EAAE,GAAG;IAC9B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;QACpB,EAAE,KAAK,CAAC;QACR,IAAI,IAAI,KAAK,GAAG,EAAE;YACd,OAAO,KAAK,CAAC;SAChB;KACJ;IACD,OAAO,CAAC,CAAC,CAAC;AACd,CAAC;;;;;;;;;;;;;;;ACTM,SAAS,OAAO,CAAC,KAAK;IACzB,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChC,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,YAAY,CAAC,KAAK;IAC9B,OAAO,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACzC,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG;IAC/B,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;AAC5B,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,MAAM,CAAC,KAAK;IACxB,OAAO,KAAK,IAAI,IAAI,CAAC;AACzB,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,QAAQ,CAAC,KAAK;IAC1B,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,WAAW,CAAC,KAAK;IAC7B,QAAQ,OAAO,KAAK,EAAE;QAClB,KAAK,WAAW,CAAC;QACjB,KAAK,QAAQ;YACT,OAAO,KAAK,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;ACPM,SAAS,QAAQ,CAAC,KAAK;IAC1B,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;;;;;;;;;;;;;;;ACFM,SAAS,MAAM,CAAC,KAAK;IACxB,KAAK,KAAK,IAAI,CAAC;AACnB,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACDqC;AAEtC;IAKI,mBAAY,IAAgB,EAAE,IAAU;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAED,4BAAQ,GAAR;QACI,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,iCAAa,GAAb;QACI,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,8BAAU,GAAV;QACI,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,uBAAG,GAAH;QACI,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;SACR,CAAC;IAChB,CAAC;IAED,4BAAQ,GAAR;QACI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACrB,OAAO,MAAI,GAAG,CAAC,OAAO,2BAEb,GAAG,CAAC,IAAI,eAChB;IAEL,CAAC;IAEO,2BAAO,GAAf;QACI,IAAI,MAAc,CAAC;QACnB,QAAQ,IAAI,CAAC,IAAI,EAAE;YACf,KAAK,0DAAsB;gBACvB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBACpB,MAAM;YACV,KAAK,2DAAuB;gBACxB,MAAM,GAAG,qEAAqE;gBAC9E,MAAM;YACV,KAAK,mEAA+B;gBAChC,MAAM,GAAG,oFAAkF,IAAI,CAAC,KAAK,yBAAsB;gBAC3H,MAAM;YACV,KAAK,kEAA8B;gBAC/B,MAAM,GAAG,uCAAoC,IAAI,CAAC,KAAK,CAAC,SAAS,6CAAyC;gBAC1G,MAAM;YACV,KAAK,+DAA2B;gBAC5B,MAAM,GAAG,iBAAc,IAAI,CAAC,KAAK,CAAC,GAAG,0GAAsG,CAAC;gBAC5I,MAAM;YACV,KAAK,4DAAwB;gBACzB,MAAM,GAAG,2BAAwB,IAAI,CAAC,KAAK,CAAC,MAAM,8EAA0E,CAAC;gBAC7H,MAAM;YACV;gBACI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;gBACtB,MAAM;SACb;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,cAAI,GAAX;QAAY,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACf,OAAO,CAAC,IAAI,OAAZ,OAAO,kBAAM,aAAa,GAAK,IAAI,GAAE;IACzC,CAAC;IAED,8BAAU,GAAV;QACI,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;AC7EM,IAAM,KAAK,GAAG,UAAU,IAAI,EAAE,IAAI;IACrC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC;;;;;;;;;;;;;;;ACHM,SAAS,YAAY,CAAC,OAAoB,EAAE,GAAW,EAAE,KAAa;IACzE,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,OAAO,EAAE;QAC3C,OAAQ,OAA4B,CAAC,KAAK,GAAG,KAAK,CAAC;KACtD;IACD,OAAO,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC5C,CAAC;;;;;;;;;;;ACLD,yC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"template_compiler.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { HtmlTag: peg$parseHtmlTag },\n      peg$startRuleFunction  = peg$parseHtmlTag,\n\n      peg$c0 = function(openTag, child) {\n        return {\n         view:openTag,\n         child: child.filter(item=> {\n            return item!=null && typeof item==='string'?item.trim().length!==0:true\n         })\n        }\n      },\n      peg$c1 = \"/\",\n      peg$c2 = peg$literalExpectation(\"/\", false),\n      peg$c3 = function(openTag) {\n        return {\n          view:openTag\n        }\n      },\n      peg$c4 = function(word, option) {\n        const result = {\n           tag:word,\n           events:[],\n           attr:[],\n           dir:{}\n        }\n        option.forEach(val=>{\n          const key = Object.keys(val)[0];\n          switch(key){\n            case 'event':\n              result.events.push(val[key]);break;\n            case 'attr':\n              result.attr.push(val[key]);break;\n             case 'dir':\n               const dirValue = val[key];\n               result.dir[dirValue.name]=dirValue.value;\n               break;\n            default:\n              result[key] = val[key]   \n          }\n        });\n        if(Object.keys(result.dir).length===0){\n           delete result.dir;\n        }\n       return result;\n      },\n      peg$c5 = function(value) {\n        const key = Object.keys(value)[0];\n        return {\n           [key]:value[key]\n        }\n      },\n      peg$c6 = peg$otherExpectation(\"close tag\"),\n      peg$c7 = function(word) {\n        return word\n      },\n      peg$c8 = peg$otherExpectation(\"Whitespace\"),\n      peg$c9 = /^[ \\t]/,\n      peg$c10 = peg$classExpectation([\" \", \"\\t\"], false, false),\n      peg$c11 = peg$otherExpectation(\"One or more whitespaces\"),\n      peg$c12 = function(space) {return null;},\n      peg$c13 = peg$otherExpectation(\"directive\"),\n      peg$c14 = \"#\",\n      peg$c15 = peg$literalExpectation(\"#\", false),\n      peg$c16 = function(name, value) {\n         return {dir:{\n            name,\n            value: value || []\n         }};\n      },\n      peg$c17 = \"(\",\n      peg$c18 = peg$literalExpectation(\"(\", false),\n      peg$c19 = \")\",\n      peg$c20 = peg$literalExpectation(\")\", false),\n      peg$c21 = function(expFirst, expRest) {\n         expRest.unshift(expFirst);\n         return expRest\n      },\n      peg$c22 = \",\",\n      peg$c23 = peg$literalExpectation(\",\", false),\n      peg$c24 = function(exp) {\n        return exp;\n      },\n      peg$c25 = \"#if(\",\n      peg$c26 = peg$literalExpectation(\"#if(\", false),\n      peg$c27 = function(exp) {\n         return {ifExp: {ifCond:exp}};\n      },\n      peg$c28 = \"#else-if(\",\n      peg$c29 = peg$literalExpectation(\"#else-if(\", false),\n      peg$c30 = function(exp) {\n         return {ifExp: {elseIfCond:exp}};\n      },\n      peg$c31 = \"#else\",\n      peg$c32 = peg$literalExpectation(\"#else\", false),\n      peg$c33 = function() {\n         return {ifExp: {else:true}}\n      },\n      peg$c34 = \"#for(\",\n      peg$c35 = peg$literalExpectation(\"#for(\", false),\n      peg$c36 = \"in\",\n      peg$c37 = peg$literalExpectation(\"in\", false),\n      peg$c38 = function(key, index, value) {\n         return {forExp:{\n            key, value,index : index || 'i'\n         }}\n      },\n      peg$c39 = \":\",\n      peg$c40 = peg$literalExpectation(\":\", false),\n      peg$c41 = \"=\",\n      peg$c42 = peg$literalExpectation(\"=\", false),\n      peg$c43 = function(isBind, attr, word) {\n         return {attr: {key:attr,value:word, isBind:isBind!=null}};\n      },\n      peg$c44 = function(index) {\n      \treturn index ;\n      },\n      peg$c45 = \"#html\",\n      peg$c46 = peg$literalExpectation(\"#html\", false),\n      peg$c47 = function(val) {\n         return {html: val};\n      },\n      peg$c48 = peg$otherExpectation(\"<\"),\n      peg$c49 = /^[<]/,\n      peg$c50 = peg$classExpectation([\"<\"], false, false),\n      peg$c51 = peg$otherExpectation(\"</\"),\n      peg$c52 = /^[\\/]/,\n      peg$c53 = peg$classExpectation([\"/\"], false, false),\n      peg$c54 = peg$otherExpectation(\">\"),\n      peg$c55 = /^[>]/,\n      peg$c56 = peg$classExpectation([\">\"], false, false),\n      peg$c57 = peg$otherExpectation(\"identifier\"),\n      peg$c58 = /^[a-zA-Z$]/,\n      peg$c59 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"$\"], false, false),\n      peg$c60 = function(val) {\n      \treturn val.join(\"\");\n      },\n      peg$c61 = peg$otherExpectation(\"mustache expression\"),\n      peg$c62 = \"{{\",\n      peg$c63 = peg$literalExpectation(\"{{\", false),\n      peg$c64 = \"}}\",\n      peg$c65 = peg$literalExpectation(\"}}\", false),\n      peg$c66 = function(val, filters) {\n      \treturn {mustacheExp:val , filters};\n      },\n      peg$c67 = peg$otherExpectation(\"filter\"),\n      peg$c68 = \"|\",\n      peg$c69 = peg$literalExpectation(\"|\", false),\n      peg$c70 = function(val) {\n        return val;\n      },\n      peg$c71 = peg$otherExpectation(\"event syntax\"),\n      peg$c72 = \"on:\",\n      peg$c73 = peg$literalExpectation(\"on:\", false),\n      peg$c74 = function(event, modifier, handlers) {\n      \t let isNative=false;\n           const option = {};\n           const modifierFiltered = [];\n           modifier.forEach(item=>{\n             if([\"capture\",\"once\",\"passive\"].includes(item)){\n               option[item]=true\n             }\n             else if(item===\"native\"){\n               isNative=true\n             }\n             else {\n               modifierFiltered.push(item)\n             }\n           });\n          return {event: {name:event, handlers,option, isNative,modifiers:modifierFiltered }};\n      },\n      peg$c75 = function(ev) {\n        return Array.isArray(ev)? ev: [ev]\n      },\n      peg$c76 = \"{\",\n      peg$c77 = peg$literalExpectation(\"{\", false),\n      peg$c78 = \"}\",\n      peg$c79 = peg$literalExpectation(\"}\", false),\n      peg$c80 = function(ev1, evRest) {\n         evRest.unshift(ev1);\n         return evRest;\n      },\n      peg$c81 = function(ev) {\n        return ev;\n      },\n      peg$c82 = function(handler) {\n        return handler\n      },\n      peg$c83 = peg$otherExpectation(\"event modifier\"),\n      peg$c84 = \".\",\n      peg$c85 = peg$literalExpectation(\".\", false),\n      peg$c86 = function(value) {\n        return value;\n      },\n      peg$c87 = function(exp, expRest) {\n         expRest.forEach(item=>{\n           exp = exp.concat(item)\n         });\n         const lastIndex = exp.length -1;\n         exp[0].exp.left = '{' + exp[0].exp.left;\n         const lastRight = exp[lastIndex].exp.right;\n         exp[lastIndex].exp.right =   (lastRight==null?'':lastRight) + '}';\n         //console.log(\"exp\",exp);\n         return exp;\n      },\n      peg$c88 = function(exp) {\n        exp[0].exp.left= \",\" + exp[0].exp.left;\n        return exp;\n      },\n      peg$c89 = function(exp, op) {\n       return {exp,op}\n      },\n      peg$c90 = function(left, op, right) {\n        return {\n         left,op,right\n        }\n      },\n      peg$c91 = /^[&|:]/,\n      peg$c92 = peg$classExpectation([\"&\", \"|\", \":\"], false, false),\n      peg$c93 = function(val) {\n        return val.join(\"\");\n      },\n      peg$c94 = /^[>=<!]/,\n      peg$c95 = peg$classExpectation([\">\", \"=\", \"<\", \"!\"], false, false),\n      peg$c96 = peg$otherExpectation(\"expression\"),\n      peg$c97 = /^[a-zA-Z0-9.$\\-'\"]/,\n      peg$c98 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \".\", \"$\", \"-\", \"'\", \"\\\"\"], false, false),\n      peg$c99 = peg$otherExpectation(\"Event Assignment\"),\n      peg$c100 = /^[a-zA-Z0-9&=>{}() |[\\]]/,\n      peg$c101 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"&\", \"=\", \">\", \"{\", \"}\", \"(\", \")\", \" \", \"|\", \"[\", \"]\"], false, false),\n      peg$c102 = peg$otherExpectation(\"html\"),\n      peg$c103 = /^[a-zA-Z0-9& .$\\n\\r\"']/,\n      peg$c104 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"&\", \" \", \".\", \"$\", \"\\n\", \"\\r\", \"\\\"\", \"'\"], false, false),\n      peg$c105 = function(val) {\n      \treturn val.join(\"\").replace(/[\\n\\r]/gm, \"\").replace(/\\s\\s+/g, ' ');\n      },\n      peg$c106 = peg$otherExpectation(\"string\"),\n      peg$c107 = /^['\\/\"]/,\n      peg$c108 = peg$classExpectation([\"'\", \"/\", \"\\\"\"], false, false),\n      peg$c109 = peg$otherExpectation(\"word\"),\n      peg$c110 = /^[a-zA-Z0-9& |.$!=\\-:;]/,\n      peg$c111 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"&\", \" \", \"|\", \".\", \"$\", \"!\", \"=\", \"-\", \":\", \";\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseHtmlTag() {\n    var s0;\n\n    s0 = peg$parseHtmlTagClosing();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseHtmlTagSelfClosing();\n    }\n\n    return s0;\n  }\n\n  function peg$parseHtmlTagClosing() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseHtmlOpen();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEndTag();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseHtmlTag();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parseHtml();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseMustacheExpression();\n          }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseHtmlTag();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parseHtml();\n            if (s4 === peg$FAILED) {\n              s4 = peg$parseMustacheExpression();\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseCloseTag();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHtmlTagSelfClosing() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseHtmlOpen();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s2 = peg$c1;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c2); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEndTag();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHtmlOpen() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseStartOpenTag();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseHtmlOpenOption();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseHtmlOpenOption();\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4(s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHtmlOpenOption() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIf();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseElseIf();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseElse();\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseFor();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseEvent();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseAttribute();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseInnerHtml();\n            if (s1 === peg$FAILED) {\n              s1 = peg$parseDirective();\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c5(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCloseTag() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseStartCloseTag();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEndTag();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWs() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c9.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseWs();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseWs();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c12(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDirective() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseWord();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDirectiveValue();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c16(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDirectiveValue() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c17;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseDirectiveRestValue();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseDirectiveRestValue();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c19;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c21(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDirectiveRestValue() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c24(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIf() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpression();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c19;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c27(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElseIf() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpression();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c19;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c33();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIdentifier();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseForIndex();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parse_();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parse_();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 2) === peg$c36) {\n                  s7 = peg$c36;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parse_();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parse_();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseExpression();\n                    if (s9 !== peg$FAILED) {\n                      s10 = [];\n                      s11 = peg$parse_();\n                      while (s11 !== peg$FAILED) {\n                        s10.push(s11);\n                        s11 = peg$parse_();\n                      }\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s11 = peg$c19;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c38(s3, s5, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAttribute() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 58) {\n      s1 = peg$c39;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c41;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseStringSymbol();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseWord();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseStringSymbol();\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  s9 = peg$parse_();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parse_();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c43(s1, s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseForIndex() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIdentifier();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInnerHtml() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c41;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseStringSymbol();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIdentifier();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseStringSymbol();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c47(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStartOpenTag() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c49.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStartCloseTag() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c49.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c52.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEndTag() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c55.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdentifier() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c58.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c58.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c59); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c60(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMustacheExpression() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c62) {\n      s1 = peg$c62;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseHtml();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseFilter();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseFilter();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (input.substr(peg$currPos, 2) === peg$c64) {\n              s6 = peg$c64;\n              peg$currPos += 2;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c65); }\n            }\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                if (input.substr(peg$currPos, 2) === peg$c64) {\n                  s6 = peg$c64;\n                  peg$currPos += 2;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c65); }\n                }\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c66(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFilter() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s2 = peg$c68;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIdentifier();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70(s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEvent() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c72) {\n      s1 = peg$c72;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c73); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseEventModifier();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseEventModifier();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s4 = peg$c41;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseEventHandlers();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c74(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEventHandlers() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEventHandler();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseEventHandlersChanined();\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c75(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEventHandlersChanined() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEventHandler();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseEventHandlerWithPipe();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseEventHandlerWithPipe();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s6 = peg$c78;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c79); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c80(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEventHandlerWithPipe() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s2 = peg$c68;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEventHandler();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81(s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEventHandler() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringSymbol();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEventAssignment();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseStringSymbol();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEventModifier() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c84;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c85); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIdentifier();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c86(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c83); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExpression() {\n    var s0, s1;\n\n    s0 = peg$parseObjectExpression();\n    if (s0 === peg$FAILED) {\n      s0 = [];\n      s1 = peg$parseExpressionWithConnector();\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseExpressionWithConnector();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseObjectExpression() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c76;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseExpressionWithConnector();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseExpressionWithConnector();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseObjectExpressionRest();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseObjectExpressionRest();\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 125) {\n            s4 = peg$c78;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c79); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseObjectExpressionRest() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseExpressionWithConnector();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseExpressionWithConnector();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c88(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExpressionWithConnector() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSingleExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseConnector();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c89(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExpWord();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOperator();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseExpWord();\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$parse_();\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$parse_();\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c90(s2, s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseConnector() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c91.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c92); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c91.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c92); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c93(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOperator() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c94.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c94.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c95); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c93(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseExpWord() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c97.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c98); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c97.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c98); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c60(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c96); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEventAssignment() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c100.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c101); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c100.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c101); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c60(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c99); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHtml() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c103.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c104); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c103.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c104); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c105(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringSymbol() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c107.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c108); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c106); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWord() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c110.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c111); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c110.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c111); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c60(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c109); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import { stringRegex, jsKeywordRegex, contextString } from \"./constant\";\n\nexport interface IExpression {\n    \"exp\": {\n        \"left\": string\n        \"op\": string\n        \"right\": string\n    },\n    \"op\": string\n}\n\nfunction replaceWithContext(value: string) {\n    return value.replace(jsKeywordRegex, `${contextString}.$1`)\n}\n\nexport function addCtxToExpression(expressions: IExpression[]) {\n    const keys = [];\n    let str = \"\";\n    let raw = \"\";\n\n    function addCtxIfNotString(value: string) {\n        if (stringRegex.test(value) === true) {\n            str += value;\n        }\n        else {\n            str += replaceWithContext(value);\n            keys.push(value.trim());\n        }\n    }\n    if (expressions != null) {\n\n        expressions.forEach(expression => {\n            addCtxIfNotString(expression.exp.left);\n            raw += expression.exp.left;\n            if (expression.exp.op != null) {\n                str += expression.exp.op;\n                raw += expression.exp.op;\n                if (expression.exp.right != null) {\n                    addCtxIfNotString(expression.exp.right);\n                    raw += expression.exp.right;\n                }\n            }\n            if (expression.op) {\n                str += expression.op;\n                raw += expression.op;\n            }\n        })\n    }\n    else {\n        str = null;\n    }\n\n    return {\n        expStr: str,\n        keys,\n        // raw: raw === \"\" ? null : stringRegex.test(raw) === true ? raw : `'${raw}'`\n        raw: raw === \"\" ? null : raw\n    }\n}","// export const stringRegex = new RegExp(/[\"\\']/g);\nexport const stringRegex = new RegExp(/^[0-9]|[\"\\']/);\n// export const jsKeywordRegex = /\\b(?!(?:false|true\\b))([a-zA-Z]+)/g;\nexport const jsKeywordRegex = /\\b(?!(?:false|true\\b))([a-zA-Z]+)/;\nexport const contextString = \"ctx\";","import { removeCommaFromLast } from \"./remove_comma_from_last\";\nimport { stringRegex } from \"./constant\";\n\nexport function convertArrayToString(value: string[], shouldAddSingleQuote = true) {\n    let result = \"[\";\n    value.forEach(val => {\n        result += (shouldAddSingleQuote === true ? (\n            stringRegex.test(val) === true ? val : `'${val}'`) :\n            val) + \",\"\n    })\n    result = removeCommaFromLast(result);\n    result += \"]\"\n    return result;\n}","import { parseview } from \"./parse_view\";\nimport { LogHelper } from \"./utils\";\nimport { ERROR_TYPE } from \"./enums\";\nimport { contextString } from \"./constant\";\nimport { ICompiledView, IIfExpModified } from \"./interface\";\nimport { unique } from \"./unique\";\nimport { addCtxToExpression } from \"./add_ctx_to_expression\";\nimport { removeCommaFromLast } from \"./remove_comma_from_last\";\nimport { convertArrayToString } from \"./convert_array_to_comma_seperated_string\";\nvar beautify = require('js-beautify');\n\nexport function createRenderer(template: string) {\n    const compiledParent = parseview(template);\n    // console.log(\"compiled\", compiledParent);\n    if (compiledParent.view) {\n        if (compiledParent.view.forExp) {\n            console.error(`Invalid template ${template}`);\n            throw new LogHelper(ERROR_TYPE.ForExpAsRoot).get();\n        }\n    }\n    let parentStr = `const ${contextString}= this;`;\n    const createJsEqFromCompiled = (compiled: ICompiledView) => {\n        let str = \"\";\n        if (compiled.view) {\n            const handleTag = () => {\n                let tagHtml = `ce('${compiled.view.tag}',`\n                if (compiled.child) {\n                    let ifModifiedExpression: IIfExpModified;\n                    let indexOfIfCond;\n                    const indexToRemove = [];\n                    let isIfCondEndFound = false;\n                    const onIfCondEnd = (last: number) => {\n                        if (indexOfIfCond == null) {\n                            return;\n                        }\n                        isIfCondEndFound = true;\n                        compiled.child[indexOfIfCond].view.ifExpModified = ifModifiedExpression;\n                        ifModifiedExpression = null;\n                        // console.log(\"if cond modified\", indexOfIfCond, compiled.child[indexOfIfCond]);\n                        for (let i = indexOfIfCond + 1; i < last; i++) {\n                            indexToRemove.push(i);\n                        }\n                        indexOfIfCond = null;\n                    }\n                    compiled.child.forEach((child, index) => {\n                        if (!(child.view && child.view.ifExp)) {\n                            return onIfCondEnd(index);\n                        }\n                        const ifExp = child.view.ifExp;\n                        if (ifExp.ifCond) {\n                            ifModifiedExpression = {\n                                ifExp: ifExp.ifCond,\n                                ifElseList: []\n                            } as IIfExpModified;\n                            indexOfIfCond = index;\n                        }\n                        else if (ifExp.elseIfCond) {\n                            ifModifiedExpression.ifElseList.push(child);\n                        }\n                        else if (ifExp.else) {\n                            ifModifiedExpression.else = child;\n                            onIfCondEnd(index + 1);\n                        }\n                        else {\n                            onIfCondEnd(index);\n                        }\n                    });\n\n                    // there was no end found and loop has ended\n                    if (ifModifiedExpression && isIfCondEndFound === false) {\n                        onIfCondEnd(compiled.child.length);\n                    }\n                    // console.log(\"indexOfIfCond\", indexToRemove);\n                    compiled.child = compiled.child.filter((child, index) => {\n                        return indexToRemove.indexOf(index) < 0\n                    })\n\n                    var child = \"[\"\n                    compiled.child.forEach((item, index) => {\n                        const childCompiled = createJsEqFromCompiled(item);\n                        if (childCompiled && childCompiled.trim().length > 0) {\n                            child += `${childCompiled},`;\n                        }\n                    });\n                    child = removeCommaFromLast(child) + \"]\"\n                    tagHtml += child;\n                }\n                else {\n                    tagHtml += \"[]\";\n                }\n                return tagHtml;\n            }\n\n            const handleOption = () => {\n                let optionStr = \",{\";\n\n                // handle event\n                const eventLength = compiled.view.events.length;\n                if (eventLength > 0) {\n                    let eventStr = \"\";\n                    // const identifierRegex = /([a-zA-Z]+)/g\n                    // const identifierRegex = /\\b(?!(?:false\\b))([\\w]+)/g\n                    const identifierRegex = /\\b(?!(?:false|true\\b))([a-zA-Z]+)/g\n                    compiled.view.events.forEach((ev, index) => {\n                        let handlerStr = \"[\";\n                        ev.handlers.forEach(item => {\n                            handlerStr += item.replace(identifierRegex, 'ctx.$1') + \",\";\n                        });\n                        handlerStr = removeCommaFromLast(handlerStr) + \"]\";\n                        eventStr += `${ev.name}: {\n                            handlers: ${handlerStr},\n                            isNative: ${ev.isNative},\n                            option: ${JSON.stringify(ev.option)},\n                            modifiers: ${convertArrayToString(ev.modifiers)}\n                        }`\n\n                        if (index + 1 < eventLength) {\n                            eventStr += \",\"\n                        }\n                    });\n                    optionStr += `on:{${eventStr}}`;\n                }\n\n                if (compiled.view.dir) {\n                    optionStr += `${optionStr.length > 2 ? \",\" : ''} dir:{`;\n                    for (const dirName in compiled.view.dir) {\n                        // optionStr += `${dirName}:{ `\n                        const dirBinding = {\n                            value: [],\n                            props: [],\n                            params: []\n                        }\n                        compiled.view.dir[dirName].forEach(dirValue => {\n                            const expressionEvaluation = addCtxToExpression(dirValue);\n                            dirBinding.value.push(expressionEvaluation.expStr)\n                            dirBinding.props = [...dirBinding.props, ...expressionEvaluation.keys]\n                            dirBinding.params.push(expressionEvaluation.raw)\n                        })\n\n                        optionStr += `${dirName}:{ \n                                value:()=>{return ${dirBinding.value.length > 1 ? convertArrayToString(dirBinding.value, false) : dirBinding.value} },\n                                props:${convertArrayToString(dirBinding.props)},\n                                params: ${convertArrayToString(dirBinding.value, false)}\n                              },\n                            `;\n\n                    }\n                    optionStr = removeCommaFromLast(optionStr) + \"}\";\n                    // optionStr += \"}\"\n                }\n\n                if (compiled.view.html) {\n                    optionStr += `${optionStr.length > 2 ? \",\" : ''} html:ctx.${compiled.view.html}`;\n                }\n\n                // handle attributes\n                const attr = compiled.view.attr;\n                const attrLength = attr.length;\n                if (attrLength > 0) {\n                    let attrString = '';\n                    attr.forEach((item, index) => {\n                        if (item.isBind) {\n                            attrString += `${item.key}:{v:ctx.${item.value},k:'${item.value}'}`;\n                        }\n                        else {\n                            attrString += `${item.key}:{v:'${item.value}'}`;\n                        }\n                        if (index + 1 < attrLength) {\n                            attrString += \",\"\n                        }\n                    });\n\n                    optionStr += `${optionStr.length > 2 ? \",\" : ''} attr:{${attrString}}`;\n                }\n\n                optionStr += \"})\";\n                return optionStr;\n            }\n\n            const handleFor = (value: string) => {\n                let forExp = compiled.view.forExp;\n                const { keys } = addCtxToExpression(forExp.value);\n                const getRegex = (subStr) => {\n                    return new RegExp(subStr, 'g');\n                }\n                return `...hForE('${keys[0]}',(${forExp.key},${forExp.index})=>{\n                            return ${\n                    value.replace(getRegex(`ctx.${forExp.key}`), forExp.key).\n                        replace(getRegex(`ctx.${forExp.index}`), forExp.index)\n                    }\n                        },${unique()})\n                `\n                //return forStr;\n            }\n            const ifModified = compiled.view.ifExpModified;\n            if (ifModified && ifModified.ifExp) {\n                let allKeys = [];\n                (() => {\n                    const { expStr, keys } = addCtxToExpression(ifModified.ifExp);\n                    allKeys = allKeys.concat(keys);\n                    str += `he(()=>{return ${expStr} ? ${handleTag() + handleOption()}`\n                })();\n                ifModified.ifElseList.forEach(item => {\n                    const { expStr, keys } = addCtxToExpression(item.view.ifExp.elseIfCond);\n                    allKeys = allKeys.concat(keys);\n                    str += `:${expStr} ? ${createJsEqFromCompiled(item)} `\n                });\n\n                let keysAsString = convertArrayToString(Array.from(new Set(allKeys)));\n                let elseString;\n                if (ifModified.else) {\n                    elseString = createJsEqFromCompiled(ifModified.else);\n                }\n                else {\n                    elseString = `ce()`;\n                }\n                str += `:${elseString} },${keysAsString},${unique()})`\n            }\n            else {\n                if (compiled.view.forExp) {\n                    str += handleFor(handleTag() + handleOption())\n                }\n                else {\n                    str += handleTag() + handleOption()\n                }\n            }\n        }\n        else if (compiled.mustacheExp) {\n\n            let method = `()=>{return ct(`;\n            let brackets = \"\";\n            compiled.filters.forEach(item => {\n                method += `f('${item}',`\n                brackets += \")\"\n            });\n            const { keys, expStr } = addCtxToExpression([{\n                op: null,\n                exp: {\n                    left: compiled.mustacheExp,\n                    op: null,\n                    right: null\n                }\n            }]);\n            method += `${expStr} ${brackets} )}`;\n            str += `he(${method}, ${convertArrayToString(keys)},${unique()})`\n        }\n        else if ((compiled as any).trim().length > 0) {\n            str += `ct('${compiled}')`;\n        }\n        return str;\n    }\n    parentStr += `return ${createJsEqFromCompiled(compiledParent)}`;\n    parentStr = beautify(parentStr, { indent_size: 4, space_in_empty_paren: true })\n    console.log(\"parentstr\", parentStr);\n    return new Function('ce', 'ct', 'f', 'he', 'hForE', parentStr);\n}","export enum ERROR_TYPE {\n    InvalidComponent = 'invalid_component',\n    SynTaxError = 'syntax_error',\n    ForExpAsRoot = \"for_exp_as_root\",\n    ForOnPrimitiveOrNull = \"for_on_primitive|null\",\n    InvalidEventHandler = \"invalid_event_handler\",\n    InvalidFilter = \"invalid_filter\",\n}","export enum HTML_TAG {\n    div = 1,\n    p = 1,\n    b = 1,\n    span = 1,\n    input = 1,\n    u = 1,\n    button = 1,\n    table = 1,\n    tr = 1,\n    td = 1,\n    thead = 1,\n    tbody = 1,\n    tfoot = 1,\n    strong = 1,\n}","export * from \"./error_type\";\nexport * from \"./html_tag\";\nexport * from \"./life_cycle_event\";","export enum LIFECYCLE_EVENT {\n    Rendered = \"rendered\",\n    Created = \"created\",\n    Destroyed = \"destroyed\"\n}","export * from \"./create_renderer\";","import * as parser from '../build/parser';\nimport { ERROR_TYPE } from './enums';\nimport { LogHelper } from './utils';\nimport { ICompiledView } from './interface';\n\nexport function parseview(viewCode: string) {\n    try {\n        // viewCode = viewCode.replace(new RegExp('\\n', 'g'), '').trim();\n        viewCode = viewCode.trim();\n        return parser.parse(viewCode) as ICompiledView;\n    }\n    catch (ex) {\n        const location = ex.location;\n        const css = `background: #222; color: #bada55`;\n        const lines = viewCode.split(\"\\n\");\n        // console.log(`%c${viewCode.substring(0, location.start.offset)}%c${viewCode.substring(location.start.offset, location.end.offset + 1)}%c${viewCode.substring(location.end.offset + 1)}`,\n        //     css, css + ';color:red', css);\n        // do not remove this\n        console.log(\"%c\" + lines.slice(0, location.start.line - 1).join(\"\\n\") +\n            \"%c\" + lines.slice(location.start.line - 1, location.end.line).join(\"\\n\") +\n            \"%c\" + lines.slice(location.end.line).join(\"\\n\")\n            , css, css + ';color:#ff0000', css);\n        const err = new LogHelper(ERROR_TYPE.SynTaxError, ex.message).getPlain();\n        throw err;\n    }\n}","export function removeCommaFromLast(value: string) {\n    value = value.trim();\n    if (value[value.length - 1] === \",\") {\n        value = value.substr(0, value.length - 1);\n    }\n    return value;\n}","let uniqueCount = 0;\n\nexport const unique = () => {\n    return ++uniqueCount;\n}","export function forOwn(obj: Object, cb: (key, value) => void) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            cb(key, obj[key])\n        }\n    }\n};","export const getFromWindow = (prop: string) => {\n    return window[prop];\n}","export function getObjectLength(value) {\n    return value.length || Object.keys(value).length;\n}","export * from \"./is_primitive\";\nexport * from \"./is_null\";\nexport * from \"./log_helper\";\nexport * from \"./is_array\";\nexport * from \"./is_array_index\";\nexport * from \"./is_object\";\nexport * from \"./is_string\";\nexport * from \"./get_from_window\"\nexport * from \"./get_object_length\";\nexport * from \"./index_of\";\nexport * from \"./merge\";\nexport * from \"./set_attribute\";\nexport * from \"./for_own\";\nexport * from \"./is_true\";\nexport * from \"./is_key_exist\";","export function indexOf(value, key) {\n    let index = -1;\n    for (let item in value) {\n        ++index;\n        if (item === key) {\n            return index;\n        }\n    }\n    return -1;\n}","export function isArray(value) {\n    return Array.isArray(value);\n}","export function isArrayIndex(value) {\n    return value === parseInt(value, 10);\n}","export function isKeyExist(obj, key) {\n    return obj[key] != null;\n}","export function isNull(value) {\n    return value == null;\n}","export function isObject(value) {\n    return typeof value === \"object\";\n}","export function isPrimitive(value) {\n    switch (typeof value) {\n        case 'undefined':\n        case 'object':\n            return false;\n    }\n    return true;\n}","export function isString(value) {\n    return typeof value === \"string\";\n}","export function isTrue(value) {\n    value === true;\n}","import { IError } from \"../interface\";\nimport { ERROR_TYPE } from \"../enums\";\n\nexport class LogHelper implements IError {\n    type: ERROR_TYPE;\n    message: string;\n    private info_: any;\n\n    constructor(type: ERROR_TYPE, info?: any) {\n        this.type = type;\n        this.info_ = info;\n        this.message = this.getMsg_();\n    }\n\n    logError() {\n        console.error(\"{Taj error}:\", this.get());\n    }\n\n    logPlainError() {\n        console.error(\"{Taj error}:\", this.getPlain());\n    }\n\n    logWarning() {\n        console.warn(\"{Taj warn}:\", this.get());\n    }\n\n    get() {\n        return {\n            message: this.message,\n            type: this.type\n        } as IError;\n    }\n\n    getPlain() {\n        var err = this.get();\n        return ` ${err.message}\n\n        type : ${err.type}\n        `\n\n    }\n\n    private getMsg_() {\n        let errMsg: string;\n        switch (this.type) {\n            case ERROR_TYPE.SynTaxError:\n                errMsg = this.info_;\n                break;\n            case ERROR_TYPE.ForExpAsRoot:\n                errMsg = `For is not allowed in root element. Create a child element instead.`\n                break;\n            case ERROR_TYPE.ForOnPrimitiveOrNull:\n                errMsg = `For expression can not be run on null or primitive datatype. Initiate variable ${this.info_} as array or object.`\n                break;\n            case ERROR_TYPE.InvalidEventHandler:\n                errMsg = `Invalid event handler for event \"${this.info_.eventName}\", Handler does not exist in component.`\n                break;\n            case ERROR_TYPE.InvalidComponent:\n                errMsg = `Component \"${this.info_.tag}\" is not registered. Make sure you have registered component either in parent component or globally.`;\n                break;\n            case ERROR_TYPE.InvalidFilter:\n                errMsg = `Can not find Filter \"${this.info_.filter}\". Make sure you have registered filter either in component or globally.`;\n                break;\n            default:\n                errMsg = this.message;\n                break;\n        }\n        return errMsg;\n    }\n\n    static warn(...args) {\n        console.warn(\"{Taj warn}:\", ...args);\n    }\n\n    throwPlain() {\n        throw \"{Taj throw}:\" + this.getPlain();\n    }\n}","export const merge = function (obj1, obj2) {\n    obj1 = Object.assign({}, obj1);\n    return Object.assign(obj1, obj2);\n}","export function setAttribute(element: HTMLElement, key: string, value: string) {\n    if (element.nodeType === 1 && key === \"value\") {\n        return (element as HTMLInputElement).value = value;\n    }\n    return element.setAttribute(key, value);\n}","module.exports = require(\"js-beautify\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/index.ts\");\n"],"sourceRoot":""}